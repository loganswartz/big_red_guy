//! SeaORM Entity. Generated by sea-orm-codegen 0.10.1

use sea_orm::entity::prelude::*;

#[derive(EnumIter, DeriveActiveEnum, Eq, PartialEq, Debug, Clone)]
#[sea_orm(rs_type = "String", db_type = "String(Some(1))")]
pub enum EventType {
    #[sea_orm(string_value = "password_reset")]
    PasswordReset,
}

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "transactional_events")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub hash: String,
    pub event_type: EventType,
    pub source_user_id: Option<i32>,
    pub target_user_id: Option<i32>,
    pub misc_data: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::SourceUserId",
        to = "super::users::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    SourceUser,
    #[sea_orm(
        belongs_to = "super::users::Entity",
        from = "Column::TargetUserId",
        to = "super::users::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    TargetUser,
}

impl ActiveModelBehavior for ActiveModel {}
